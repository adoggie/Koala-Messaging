
app_name: 'gateway_server'
project_name: 'koala'
project_version: '0.1'

logging:
  level: DEBUG
  format: '%(levelname)s %(asctime)s  %(message)s'
  message_format: '%(project_name)s:%(project_version)s %(app_id)s %(_filename)s:%(_lineno)d [%(tags)s] '

  filters:
    trans:
      tag: 'TRANS:'   # tag 过滤
  handlers:
    - type: file
      enable: true
      filename: 'server.log'
      encoding: 'UTF-8'
      max_bytes: 67108864 # 64MB
      backup_count: 10

    - type: file
      enable: true
      filename: 'trans.log'   #运单日志跟踪
      encoding: 'UTF-8'
      max_bytes: 67108864 # 64MB
      backup_count: 10
      filter: 'trans'

    - type: logtail
      enable: false
      logstore: 'abc'
      access_token: 'xxxx'
      scret_key: 'xxxx'
      uri: 'xxxx'

    - type: console
      enable: false

http_trace: #自动日志记录
  level: DEBUG
  request:
    options:
      header:  false
      body:  true
      max_size: 500 # 最大数据包长度
    urls:
      - match: '/'
      - match: 'zoo/cat'
        body:  true

  response:
    options:
      header:  false
      body:  true
      max_size: 500 # 最大数据包长度
    urls:
      - match: '/'
      - match: 'zoo/cat'
        body:  true

http:
  host : '127.0.0.1'
  port : 5555
  threaded: false
  debug: true

cache_config:
  default:
    type: redis
    host: 'redis_server'
    port: 6379
    password: ''
    enable: true

flask_config:
  active: default
  default:
    REDIS_URL : "redis://:@localhost:6379/1"
    SQLALCHEMY_DATABASE_URI : 'sqlite:////tmp/test.db'
    SQLALCHEMY_BINDS:
      users:        'mysqldb://localhost/users'
      appmeta:      'sqlite:////path/to/appmeta.db'

    SQLALCHEMY_TRACK_MODIFICATIONS : true
    SQLALCHEMY_COMMIT_ON_TEARDOWN : true
    SECRET_KEY : "abc"
    TOKEN_EXPIRE : 3600*2
    MAX_CONTENT_LENGTH : 5242880
    UPLOAD_FOLDER : 'upload/'
    FRONT_URL :  'tender_manage/'
    DEBUG_TB_PROFILER_ENABLED : true
    DEBUG : true

  devel:

blueprint_routes:
  - package: 'mas'
    url: '/koala/api'
    modules:
      - name: 'api'
        url: '/mas'
        routes:
          - url: '/messages'   # url name
            name: 'message_send'   # function name
            methods: 'POST,GET'
          - url: '/messages/<sid>/ack'
            name: 'message_ack'
            methods: 'POST'

      - name: 'auth'
        url: '/maus'
        routes:
          - url: '/tickets'
            name: 'getTickets'
            methods: 'POST,GET'

amqp_config:
  - name: 'mq_2'
    type: 'qpid'
    host: 'ytodev2'
    port: 5672
    address: "c"
    exec_thread_nr: 1 #执行线程数
    entry:  'access.amqp.channel.data_entry' # last unit< get_message> is function object
    enable: true
    read: true
    write: false

zookeeper_config:
  hosts: 'localhost:2181'
  root: '/camel/carrier'

database_config:
  pgsql:
    driver: 'pgsql'
    db_pool: 5
    host: 'ytodev2'
    port: 5432
    user: 'postgres'
    password: '13916624477'
    dbname: 'rhino'

  mongodb:
    driver: 'mongo'
    host: 'mongo_server'
    port: 27017
    user: ''
    password: ''
    dbname: 'koala'

encryption:
  secret_key: 'abc123'

token_secret_key: 'abc123'

access_token_duration: 864000  # 10 days
access_heartbeat_timeout: 7200 # seconds




# qpid-receive -b localhost:5672 -a "mq_test;{create:always,node:{type:queue,durable:true}}"






